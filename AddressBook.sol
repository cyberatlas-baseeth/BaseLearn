// SPDX-License-Identifier: GPL-3.0
// S√∂zle≈ümenin lisans t√ºr√ºn√º belirtir: GNU General Public License v3.0.

pragma solidity ^0.8.8;
// Solidity derleyici s√ºr√ºm√ºn√º belirtir. S√∂zle≈üme, 0.8.8 veya daha yeni bir s√ºr√ºmle derlenmelidir.

import "@openzeppelin/contracts/access/Ownable.sol";
// OpenZeppelin k√ºt√ºphanesinden Ownable s√∂zle≈ümesini i√ßeri aktarƒ±r. Bu, yalnƒ±zca s√∂zle≈üme sahibinin belirli i≈ülevleri √ßaƒüƒ±rabilmesini saƒülayan bir eri≈üim kontrol mekanizmasƒ±dƒ±r.

contract AddressBook is Ownable {
    // AddressBook adƒ±nda bir akƒ±llƒ± s√∂zle≈üme tanƒ±mlar ve Ownable'dan miras alƒ±r, b√∂ylece yalnƒ±zca s√∂zle≈üme sahibi (owner) belirli i≈ülemleri ger√ßekle≈ütirebilir.

    // √ñzel bir "salt" (tuz) deƒüeri tanƒ±mlar. Bu deƒüer dahili kullanƒ±m i√ßindir ve ≈üu anda kullanƒ±lmamaktadƒ±r.
    string private salt = "value";

    // Bir ki≈üiyi temsil eden bir veri yapƒ±sƒ± (struct) tanƒ±mlar.
    struct Contact {
        uint id; // Ki≈üinin benzersiz kimlik numarasƒ±
        string firstName; // Ki≈üinin adƒ±
        string lastName; // Ki≈üinin soyadƒ±
        uint[] phoneNumbers; // Ki≈üinin birden fazla telefon numarasƒ±nƒ± saklayan dizi
    }

    // T√ºm ki≈üileri saklamak i√ßin bir dizi tanƒ±mlar. Bu dizi √∂zel (private) olup yalnƒ±zca s√∂zle≈üme i√ßinden eri≈üilebilir.
    Contact[] private contacts;

    // Her bir ki≈üinin kimliƒüini (ID) dizideki indeksine e≈üleyen bir harita (mapping).
    mapping(uint => uint) private idToIndex;

    // Bir sonraki ki≈üi i√ßin kullanƒ±lacak kimlik numarasƒ±nƒ± takip eden deƒüi≈üken.
    uint private nextId = 1;

    // Ki≈üi bulunamadƒ±ƒüƒ±nda kullanƒ±lacak √∂zel bir hata mesajƒ± tanƒ±mlar.
    error ContactNotFound(uint id);

    // üîß D√úZELTME: Yapƒ±cƒ± (constructor) fonksiyon eklendi. Ownable s√∂zle≈ümesi i√ßin gerekli.
    // S√∂zle≈üme olu≈üturulurken msg.sender (s√∂zle≈ümeyi daƒüƒ±tan adres) sahibi olarak atanƒ±r.
    constructor() Ownable(msg.sender) {}

    // Yeni bir ki≈üi eklemek i√ßin fonksiyon. Yalnƒ±zca s√∂zle≈üme sahibi √ßaƒüƒ±rabilir.
    function addContact(string calldata firstName, string calldata lastName, uint[] calldata phoneNumbers) external onlyOwner {
        // Saƒülanan bilgilerle yeni bir ki≈üi olu≈üturur ve contacts dizisine ekler.
        contacts.push(Contact(nextId, firstName, lastName, phoneNumbers));
        // Yeni ki≈üinin kimliƒüini dizideki indeksine e≈üler.
        idToIndex[nextId] = contacts.length - 1;
        // Bir sonraki ki≈üi i√ßin kimlik numarasƒ±nƒ± artƒ±rƒ±r.
        nextId++;
    }

    // Belirtilen kimlik numarasƒ±na sahip bir ki≈üiyi silmek i√ßin fonksiyon. Yalnƒ±zca s√∂zle≈üme sahibi √ßaƒüƒ±rabilir.
    function deleteContact(uint id) external onlyOwner {
        // Silinecek ki≈üinin dizideki indeksini alƒ±r.
        uint index = idToIndex[id];
        // ƒ∞ndeksin ge√ßerli olup olmadƒ±ƒüƒ±nƒ± ve ki≈üinin var olup olmadƒ±ƒüƒ±nƒ± kontrol eder.
        if (index >= contacts.length || contacts[index].id != id) revert ContactNotFound(id);
        // Silinecek ki≈üiyi dizinin son elemanƒ±yla deƒüi≈ütirir.
        contacts[index] = contacts[contacts.length - 1];
        // Ta≈üƒ±nan ki≈üinin indeksini g√ºnceller.
        idToIndex[contacts[index].id] = index;
        // Dizinin son elemanƒ±nƒ± kaldƒ±rƒ±r.
        contacts.pop();
        // Silinen ki≈üinin kimlik-indeks e≈ülemesini kaldƒ±rƒ±r.
        delete idToIndex[id];
    }

    // Belirtilen kimlik numarasƒ±na sahip bir ki≈üinin bilgilerini d√∂nd√ºren fonksiyon.
    function getContact(uint id) external view returns (Contact memory) {
        // Ki≈üinin dizideki indeksini alƒ±r.
        uint index = idToIndex[id];
        // ƒ∞ndeksin ge√ßerli olup olmadƒ±ƒüƒ±nƒ± ve ki≈üinin var olup olmadƒ±ƒüƒ±nƒ± kontrol eder.
        if (index >= contacts.length || contacts[index].id != id) revert ContactNotFound(id);
        // Ki≈üinin bilgilerini d√∂nd√ºr√ºr.
        return contacts[index];
    }

    // T√ºm ki≈üileri d√∂nd√ºren fonksiyon.
    function getAllContacts() external view returns (Contact[] memory) {
        // T√ºm ki≈üiler dizisini d√∂nd√ºr√ºr.
        return contacts;
    }
}
